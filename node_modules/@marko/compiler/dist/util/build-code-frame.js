"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.buildCodeFrameError = buildCodeFrameError;var _path = _interopRequireDefault(require("path"));
var _kleur = _interopRequireDefault(require("kleur"));
var _codeFrame = require("@babel/code-frame");
const CWD = process.cwd();

function buildCodeFrameError(
filename,
code,
loc,
message,
Error = SyntaxError)
{
  const err = new Error();
  const codeFrame = buildCodeFrame(filename, code, loc, message);

  err.loc = loc;
  err.label = message;
  err.stack = ""; // Avoid showing the stack trace for this error.

  // Prevent babel from changing our error message.
  Object.defineProperty(err, "message", {
    get() {
      return codeFrame;
    },
    set() {}
  });

  return err;
}

function buildCodeFrame(filename, code, loc, message) {
  return `${_kleur.default.cyan(_path.default.relative(CWD, filename))}${
  loc ?
  `:${_kleur.default.yellow(loc.start.line)}:${_kleur.default.yellow(
  loc.start.column + 1)
  }\n\n${(0, _codeFrame.codeFrameColumns)(
  code,
  {
    start: {
      line: loc.start.line,
      column: loc.start.column + 1
    },
    end:
    loc.end && loc.start.line === loc.end.line ?
    {
      line: loc.end.line,
      column: loc.end.column + 1
    } :
    undefined
  },
  { highlightCode: true, message })
  }` :
  `: ${message}`
  }`;
}